version: '3.8'

services:
  keycloak:
    image: quay.io/keycloak/keycloak:latest
    environment:
      - KEYCLOAK_ADMIN=admin
      - KEYCLOAK_ADMIN_PASSWORD=admin
    command:
      - start-dev
      - --import-realm
    ports:
      - "8080:8080"
    volumes:
      - ./keycloak:/opt/keycloak/data/import
    restart: unless-stopped
    networks:
      - app-network

  postgres:
    image: postgres:15
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: admin
      POSTGRES_DB: db_usuarios
    ports:
      - "5432:5432"
    volumes:
      - pgdata:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 5s
      timeout: 5s
      retries: 5
    networks:
      - app-network

  # RabbitMQ Message Broker
  rabbitmq:
    image: rabbitmq:3-management
    container_name: sensor-rabbitmq
    hostname: rabbitmq
    ports:
      - "5672:5672"    
      - "15672:15672"  # Interfaz web de administraci√≥n
    environment:
      RABBITMQ_DEFAULT_USER: guest
      RABBITMQ_DEFAULT_PASS: guest
    volumes:
      - rabbitmq_data:/var/lib/rabbitmq
    healthcheck:
      test: ["CMD", "rabbitmq-diagnostics", "-q", "ping"]
      interval: 30s
      timeout: 10s
      retries: 5
      start_period: 30s
    networks:
      - app-network

  sensor-simulador:
    build:
      context: ./sensores
      dockerfile: Dockerfile
    container_name: sensor-simulador
    environment:
      - RABBITMQ_HOST=rabbitmq
      - QUEUE_NAME=sensor_data
      - SEND_INTERVAL=2
    depends_on:
      rabbitmq:
        condition: service_healthy
    restart: unless-stopped
    networks:
      - app-network

volumes:
  pgdata:
  rabbitmq_data:

networks:
  app-network:
